/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package member.list;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 *
 * @author Weary
 */

 class MyCustomFilter extends javax.swing.filechooser.FileFilter {
        @Override
        public boolean accept(File file) {
            // Allow only directories, or files with ".txt" extension
            return file.isDirectory() || file.getAbsolutePath().endsWith(".csv");
        }
        @Override
        public String getDescription() {
            // This description will be displayed in the dialog,
            // hard-coded = ugly, should be done via I18N
            return "csv documents (*.csv)";
        }
    } 





public class MemberListUI extends  javax.swing.JFrame  {

    /**
     * Creates new form MemberListUI
     */
    public MemberListUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooserRUSU = new javax.swing.JFileChooser();
        fileChooserAGB = new javax.swing.JFileChooser();
        fileChooserMissing = new javax.swing.JFileChooser();
        fileChooserMembers = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        run = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        missingNames = new javax.swing.JTextArea();
        agbFilePathText = new java.awt.TextArea();
        rusuFilePathText = new java.awt.TextArea();
        missingFilePathText = new java.awt.TextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        thresholdTextBox = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        memberListPathText = new java.awt.TextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openRUSU = new javax.swing.JMenuItem();
        openAGB = new javax.swing.JMenuItem();
        outPath = new javax.swing.JMenuItem();
        OpenMembers = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();

        fileChooserRUSU.setDialogTitle("Select the RUSU list");
        fileChooserRUSU.setFileSelectionMode(javax.swing.JFileChooser.FILES_ONLY);
        fileChooserRUSU.setFileFilter(new MyCustomFilter());
        fileChooserRUSU.setCurrentDirectory( new File(System.getProperty("user.dir")));

        fileChooserAGB.setDialogTitle("Select AGB");
        fileChooserAGB.setFileFilter(fileChooserRUSU.getFileFilter());
        fileChooserAGB.setFileSelectionMode(javax.swing.JFileChooser.FILES_ONLY);
        fileChooserAGB.setCurrentDirectory( new File(System.getProperty("user.dir")));

        fileChooserMissing.setCurrentDirectory( new File(System.getProperty("user.dir")));
        fileChooserMissing.setDialogTitle("Select Output");
        fileChooserMissing.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);

        fileChooserMembers.setDialogTitle("Select the output file");
        fileChooserMembers.setFileFilter(new MyCustomFilter());
        fileChooserMembers.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);
        fileChooserRUSU.setCurrentDirectory( new File(System.getProperty("user.dir")));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 51, 51));

        run.setText("Run");
        run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runActionPerformed(evt);
            }
        });

        missingNames.setColumns(20);
        missingNames.setRows(5);
        jScrollPane1.setViewportView(missingNames);

        jLabel1.setText("AGB PAth");

        jLabel3.setText("RUSU Path");

        jLabel4.setText("Member List Path");

        thresholdTextBox.setText("0.4");
        thresholdTextBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                thresholdTextBoxPropertyChange(evt);
            }
        });

        jLabel5.setText("Missing Persons");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rusuFilePathText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
                            .addComponent(agbFilePathText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(missingFilePathText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(memberListPathText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(run)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(thresholdTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(102, 102, 102)
                                .addComponent(rusuFilePathText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(agbFilePathText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(missingFilePathText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(memberListPathText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(run)
                            .addComponent(thresholdTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 177, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addGap(25, 25, 25))
        );

        jMenuBar1.setBackground(new java.awt.Color(34, 34, 34));
        jMenuBar1.setForeground(new java.awt.Color(255, 255, 255));
        jMenuBar1.setInheritsPopupMenu(true);

        jMenu1.setText("File");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        openRUSU.setText("Open RUSU");
        openRUSU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openRUSUActionPerformed(evt);
            }
        });
        jMenu1.add(openRUSU);

        openAGB.setText("Open AGB");
        openAGB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openAGBActionPerformed(evt);
            }
        });
        jMenu1.add(openAGB);

        outPath.setText("Set Missing Path");
        outPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outPathActionPerformed(evt);
            }
        });
        jMenu1.add(outPath);

        OpenMembers.setText("Member List Path");
        OpenMembers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenMembersActionPerformed(evt);
            }
        });
        jMenu1.add(OpenMembers);

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jMenu1.add(Exit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openRUSUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openRUSUActionPerformed
        int returnVal = fileChooserRUSU.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooserRUSU.getSelectedFile();
          
              // What to do with the file, e.g. display it in a TextArea
                rusuFilePathText.setText(fileChooserRUSU.getSelectedFile().toString());
        } 
        else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_openRUSUActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    
    private void openAGBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openAGBActionPerformed
         int returnVal = fileChooserAGB.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooserAGB.getSelectedFile();
        
              // What to do with the file, e.g. display it in a TextArea
                agbFilePathText.setText(fileChooserAGB.getSelectedFile().toString());
        } 
        else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_openAGBActionPerformed

    private void BadFileErrorMessage(String fileName)
    {
          JFrame frame = new JFrame("File Path Error");
              // show a joptionpane dialog using showMessageDialog
            JOptionPane.showMessageDialog(frame,
                "Please check the file path for" + fileName, 
                "Threshold Problem",JOptionPane.WARNING_MESSAGE);
           
    }
    
    private void runActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runActionPerformed
       String rusu,agb,missing, members = null;
        
        if ( fileChooserAGB.getSelectedFile().canRead())
       {     
         agb =  fileChooserAGB.getSelectedFile().toString();
       }
        else {BadFileErrorMessage("AGB"); return;} 
        
        if ( fileChooserRUSU.getSelectedFile().canRead())
       {     
         rusu =  fileChooserRUSU.getSelectedFile().toString();
       }
        else {BadFileErrorMessage("RUSU"); return;} 
     
        if (!fileChooserMissing.getSelectedFile().toString().endsWith(".csv"))
        {
            missing = fileChooserMissing.getSelectedFile().toString() + "\\missing.csv";
            File file = new File(missing);
            try{
            file.createNewFile();
            }
            catch (Exception e)
            {
                if (!file.isFile())
                {
                    BadFileErrorMessage("Missing");
                }
            }
        }
        else  if ( fileChooserMissing.getSelectedFile().canRead())
        {     
         missing =  fileChooserMissing.getSelectedFile().toString();
        }
        else {BadFileErrorMessage("Missing"); return;} 
        
        
         if (!fileChooserMembers.getSelectedFile().toString().endsWith(".csv"))
        {
            members = fileChooserMembers.getSelectedFile().toString() + "\\MemberList.csv";
            File file = new File(members);
            try{
            file.createNewFile();
            }
            catch (Exception e)
            {
                if (!file.isFile())
                {
                    BadFileErrorMessage("Members");
                }
            }
        }
        else  if ( fileChooserMembers.getSelectedFile().canRead())
        {     
         members =  fileChooserMembers.getSelectedFile().toString();
        }
        else {BadFileErrorMessage("Members"); return;} 
        
        
        
    
        
        String paths[] = {agb,rusu, missing, members};
       try{
       String s = thresholdTextBox.getText().toString();
       Float d = Float.parseFloat(s);
        MemberList.SetThreshold(d);
       }
       catch (NumberFormatException e)
       {
            JFrame frame = new JFrame("Threshold Error");
              // show a joptionpane dialog using showMessageDialog
            JOptionPane.showMessageDialog(frame,
                "Please check the threshold entry (should be a number, ideally less than 1)", 
                "Threshold Problem",JOptionPane.WARNING_MESSAGE);
            return;
       }
        MemberList.begin(paths);
       
         File file = new File(missingFilePathText.getText());
        String line = "Missing Names" + "\n";
        try{           
        FileInputStream inputStream = new FileInputStream(file);
        Scanner sc = new Scanner(inputStream);
      
        int lineCounter = 0;
        while (sc.hasNext()){
            //reads each line and adds the line number + the string values to the data structure
            line += sc.nextLine();
            line += "\n";
        }
        }
        catch (IOException e)
        {

        }
       missingNames.setText(line);
        
        
    }//GEN-LAST:event_runActionPerformed

    private void outPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outPathActionPerformed
         int returnVal = fileChooserMissing.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooserMissing.getSelectedFile();
          
              // What to do with the file, e.g. display it in a TextArea
                missingFilePathText.setText(fileChooserMissing.getSelectedFile().toString());
        } 
        else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_outPathActionPerformed

    private void thresholdTextBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_thresholdTextBoxPropertyChange
       
      return;
    }//GEN-LAST:event_thresholdTextBoxPropertyChange

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
          
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void OpenMembersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenMembersActionPerformed
          int returnVal = fileChooserMembers.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooserMembers.getSelectedFile();
          
              // What to do with the file, e.g. display it in a TextArea
                memberListPathText.setText(fileChooserMembers.getSelectedFile().toString());
        } 
        else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_OpenMembersActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MemberListUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MemberListUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MemberListUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MemberListUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MemberListUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenuItem OpenMembers;
    private java.awt.TextArea agbFilePathText;
    private javax.swing.JFileChooser fileChooserAGB;
    private javax.swing.JFileChooser fileChooserMembers;
    private javax.swing.JFileChooser fileChooserMissing;
    private javax.swing.JFileChooser fileChooserRUSU;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.TextArea memberListPathText;
    private java.awt.TextArea missingFilePathText;
    private javax.swing.JTextArea missingNames;
    private javax.swing.JMenuItem openAGB;
    private javax.swing.JMenuItem openRUSU;
    private javax.swing.JMenuItem outPath;
    private javax.swing.JButton run;
    private java.awt.TextArea rusuFilePathText;
    private javax.swing.JTextField thresholdTextBox;
    // End of variables declaration//GEN-END:variables
}
